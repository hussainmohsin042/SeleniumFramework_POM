package FrameworkDesign.Tests;

import java.io.IOException;
import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import FrameworkDesign.PageObjects.CartPage;
import FrameworkDesign.PageObjects.CheckoutPage;
import FrameworkDesign.PageObjects.ConfirmationPage;
import FrameworkDesign.PageObjects.LandingPage;
import FrameworkDesign.PageObjects.OrderPage;
import FrameworkDesign.PageObjects.ProductCatalogue;
import io.github.bonigarcia.wdm.WebDriverManager;
import mohsinhussain.TestComponents.BaseTest;

public class submitOrderTest extends BaseTest {
	String productName = "ZARA COAT 3";
	
	@Test(dataProvider = "getData", groups= {purchase})

	public void submitOrder(String email, String password, String productName) throws IOException, InterruptedException {
		
		ProductCatalogue productcatalogue = landingpage.loginApplication(email, password);
		List<WebElement> products = productcatalogue.getProductList();
		productcatalogue.addProductToCart(productName);
		CartPage cartPage = productcatalogue.goToCartPage();
		Boolean match = cartPage.VerifyProductDisplay(productName);
		Assert.assertTrue(match);
		CheckoutPage checkoutpage = cartPage.goToCheckout();
		// checkoutpage.selectCountry("india");
		// ConfirmationPage confirmationpage = checkoutpage.submitOrder();

		// String confirmMessage = confirmationpage.getConfirmationMesage();
		// Assert.assertTrue(confirmMessage.equalsIgnoreCase("THANKYOU FOR THE
		// ORDER."));
	}

	// To verify the ZARA COAT 3 is displaying in orders page

	@Test(dependsOnMethods = { "submitOrder" })
	public void orderHistoryTest() {
		// "ZARA COAT 3";

		ProductCatalogue productcatalogue = landingpage.loginApplication("hussainmohsin234@gmail.com", "Test@12345");
		OrderPage ordersPage=productcatalogue.goToOrdersPage();  
		Assert.assertTrue(ordersPage.VerifyOrderDisplay(productName));
	}

	@DataProvider
	public Object[][] getData()
	{
		return new Object[][]
				{{"hussainmohsin234@gmail.com","Test@12345","ZARA COAT 3"},{"hussainmohsin34@gmail.com","Test@12345","ADIDAS ORIGINAL"}};
		
		
		
	}
	
	
}
